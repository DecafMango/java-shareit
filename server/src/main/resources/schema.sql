DROP TABLE IF EXISTS requests, users, items, bookings, comments;

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name  VARCHAR,
    email VARCHAR UNIQUE,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT unq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY,
    description  VARCHAR,
    requestor_id BIGINT,
    created      TIMESTAMP,
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT fk_requestor FOREIGN KEY (requestor_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS items
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name        VARCHAR,
    description VARCHAR,
    available   BOOLEAN,
    request_id  BIGINT NULL,
    owner_id    BIGINT,
    CONSTRAINT pk_item PRIMARY KEY (id),
    CONSTRAINT fk_user FOREIGN KEY (owner_id) REFERENCES users (id),
    CONSTRAINT fk_request FOREIGN KEY (request_id) REFERENCES requests (id)
);

CREATE TABLE IF NOT EXISTS bookings
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY,
    booking_start TIMESTAMP,
    booking_end   TIMESTAMP,
    item_id       BIGINT,
    booker_id     BIGINT,
    status        VARCHAR,
    CONSTRAINT pk_booking PRIMARY KEY (id),
    CONSTRAINT fk_booker FOREIGN KEY (booker_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS comments
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY,
    text      VARCHAR,
    author_id BIGINT,
    created   TIMESTAMP WITHOUT TIME ZONE,
    item_id   BIGINT,
    CONSTRAINT pk_comment PRIMARY KEY (id),
    CONSTRAINT fk_item FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT fk_author FOREIGN KEY (author_id) REFERENCES users (id)
);

